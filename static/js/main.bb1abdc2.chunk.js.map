{"version":3,"sources":["lib/commerce.js","components/Navbar/NavbarStyles.js","assets/logo.svg","components/Navbar/Navbar.js","components/Cart/CartItem/CartItemStyles.js","components/Cart/CartItem/CartItem.js","components/Products/ProductsStyles.js","components/Cart/CartStyles.js","components/Cart/Cart.js","components/Products/Product/ProductStyles.js","components/Products/Product/Product.js","components/Products/Products.js","components/Checkout/CheckoutStyles.js","components/Checkout/CheckoutItems/LeftItem.js","components/Checkout/CheckoutItems/RightItem.js","components/Checkout/Checkout.js","components/Confirmation/ConfirmationStyles.js","components/Confirmation/Confirmation.js","App.js","index.js"],"names":["commerce","Commerce","process","StyledAppBar","styled","AppBar","StyledToolbar","Toolbar","StyledImg","img","StyledTypography","withStyles","root","marginLeft","flexGrow","Typography","StyledLink","Link","Navbar","cartQnt","position","Container","maxWidth","to","src","logo","alt","variant","IconButton","color","Badge","badgeContent","StyledDiv","div","CartItem","item","handleUpdateCartQty","handleRemoveFromCart","Card","CardMedia","component","name","height","image","media","source","title","CardActionArea","CardContent","align","line_total","formatted_with_symbol","CardActions","Button","type","size","onClick","id","quantity","StyledGridContainer","display","gridGap","paddingLeft","paddingRight","gridTemplateColumns","StyledFlexContainer","justifyContent","alignItems","StyledButton","width","marginBottom","DivGrid","DivFlex","divWidth","Cart","cart","handleEmptyCart","cartItems","line_items","length","gutterBottom","map","subtotal","CircularProgress","StyledCard","StyledCardActionArea","margin","Product","product","handleAddToCart","dangerouslySetInnerHTML","__html","description","price","Products","products","StyledContainer","flexDirection","StyledForm","form","StyledPaper","marginTop","Paper","StyledItemMenu","thisYear","Date","getFullYear","schema","yup","shape","firstName","required","lastName","email","fullName","streetAddress","city","zipCode","matches","max","country","creditCardNumber","expiryMonth","integer","min","expiryYear","ccv","customerInformationInputs","placeholder","shippingDetailsInputs","paymentInformationInputs","LeftItem","checkoutToken","useForm","resolver","yupResolver","control","handleSubmit","errors","formState","history","useHistory","createInputs","arrayName","input","defaultValue","render","field","Input","elevation","onSubmit","path","push","RightItem","Checkout","useState","setCheckoutToken","useEffect","checkout","generateToken","then","token","catch","error","console","log","Object","keys","constructor","pathname","ConfirmationContainer","textAlign","fontSize","backgroundColor","Confirmation","setTimeout","App","setProducts","setCart","fetchProducts","a","list","data","fetchCart","retrieve","empty","resp","basename","total_items","exact","productId","add","lineItemId","update","remove","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb1abdc2.chunk.js","sourcesContent":["import Commerce from \"@chec/commerce.js\";\r\n\r\nexport const commerce = new Commerce(\r\n  process.env.REACT_APP_CHEC_PUBLIC_KEY,\r\n  true\r\n);\r\n","import styled from \"styled-components\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Toolbar, AppBar, Typography } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledAppBar = styled(AppBar)`\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nexport const StyledToolbar = styled(Toolbar)`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  color: #fff;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 70px;\r\n`;\r\n\r\nexport const StyledTypography = withStyles({\r\n  root: {\r\n    marginLeft: 15,\r\n    flexGrow: 1,\r\n  },\r\n})(Typography);\r\n\r\nexport const StyledLink = styled(Link)`\r\n  color: inherit;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.8cbee1ca.svg\";","import React from \"react\";\r\nimport { IconButton, Container, Badge } from \"@material-ui/core\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  StyledToolbar,\r\n  StyledAppBar,\r\n  StyledImg,\r\n  StyledTypography,\r\n  StyledLink,\r\n} from \"./NavbarStyles\";\r\n\r\nimport logo from \"assets/logo.svg\";\r\n\r\nconst Navbar = ({ cartQnt }) => {\r\n  return (\r\n    <>\r\n      <StyledAppBar position=\"sticky\">\r\n        <Container maxWidth=\"lg\">\r\n          <StyledToolbar>\r\n            <Link to=\"/\">\r\n              <StyledImg src={logo} alt=\"logo\" />\r\n            </Link>\r\n\r\n            <StyledTypography variant=\"h6\">E-commerce</StyledTypography>\r\n\r\n            <StyledLink to=\"/cart\">\r\n              <IconButton color=\"inherit\">\r\n                {cartQnt ? (\r\n                  <Badge badgeContent={cartQnt} color=\"secondary\">\r\n                    <ShoppingCartIcon />\r\n                  </Badge>\r\n                ) : (\r\n                  <Badge badgeContent={0} color=\"secondary\">\r\n                    <ShoppingCartIcon />\r\n                  </Badge>\r\n                )}\r\n              </IconButton>\r\n            </StyledLink>\r\n          </StyledToolbar>\r\n        </Container>\r\n      </StyledAppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledDiv = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { StyledDiv } from \"./CartItemStyles\";\r\n\r\nconst CartItem = ({ item, handleUpdateCartQty, handleRemoveFromCart }) => {\r\n  return (\r\n    <Card>\r\n      <CardMedia\r\n        component=\"img\"\r\n        alt={item.name}\r\n        height=\"200\"\r\n        image={item.media.source}\r\n        title={item.name}\r\n      />\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" align=\"center\">\r\n            {item.name}\r\n          </Typography>\r\n          <Typography variant=\"h6\" align=\"center\">\r\n            {item.line_total.formatted_with_symbol}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <StyledDiv>\r\n          <Button\r\n            type=\"button\"\r\n            size=\"small\"\r\n            onClick={() => handleUpdateCartQty(item.id, item.quantity - 1)}\r\n          >\r\n            -\r\n          </Button>\r\n          <Typography>{item.quantity}</Typography>\r\n          <Button\r\n            type=\"button\"\r\n            size=\"small\"\r\n            onClick={() => handleUpdateCartQty(item.id, item.quantity + 1)}\r\n          >\r\n            +\r\n          </Button>\r\n        </StyledDiv>\r\n        <Button\r\n          variant=\"contained\"\r\n          type=\"button\"\r\n          color=\"secondary\"\r\n          onClick={() => handleRemoveFromCart(item.id)}\r\n        >\r\n          Remove\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const StyledGridContainer = withStyles({\r\n  root: {\r\n    display: \"grid\",\r\n    gridGap: 20,\r\n  },\r\n  \"@media (min-width: 400px)\": {\r\n    root: {\r\n      paddingLeft: 30,\r\n      paddingRight: 30,\r\n    },\r\n  },\r\n  \"@media (min-width: 500px)\": {\r\n    root: {\r\n      gridTemplateColumns: \"repeat(2, 1fr)\",\r\n    },\r\n  },\r\n  \"@media (min-width: 750px)\": {\r\n    root: {\r\n      gridTemplateColumns: \"repeat(3, 1fr)\",\r\n    },\r\n  },\r\n  \"@media (min-width: 1050px)\": {\r\n    root: {\r\n      gridTemplateColumns: \"repeat(4, 1fr)\",\r\n    },\r\n  },\r\n})(Container);\r\n\r\nexport const StyledFlexContainer = withStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"90vh\",\r\n  },\r\n})(Container);\r\n","import { Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledButton = withStyles({\r\n  root: {\r\n    width: 170,\r\n    height: 50,\r\n    marginBottom: 20,\r\n  },\r\n})(Button);\r\n\r\nexport const DivGrid = styled.div`\r\n  display: grid;\r\n  gap: 20px;\r\n  margin-bottom: 50px;\r\n\r\n  @media (min-width: 500px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  @media (min-width: 750px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n  @media (min-width: 1050px) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n`;\r\n\r\nexport const DivFlex = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: ${({ divWidth }) => divWidth && \"360px\"};\r\n\r\n  @media (min-width: 750px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n","import { CircularProgress, Container, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport CartItem from \"./CartItem/CartItem\";\r\n\r\nimport { StyledFlexContainer } from \"../Products/ProductsStyles\";\r\nimport { DivGrid, DivFlex, StyledButton } from \"./CartStyles\";\r\n\r\nconst Cart = ({\r\n  cart,\r\n  handleUpdateCartQty,\r\n  handleRemoveFromCart,\r\n  handleEmptyCart,\r\n}) => {\r\n  const cartItems = cart.line_items;\r\n\r\n  if (!cartItems)\r\n    return (\r\n      <StyledFlexContainer>\r\n        <CircularProgress size={80} />\r\n      </StyledFlexContainer>\r\n    );\r\n\r\n  if (cartItems.length > 0)\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Your Shopping Cart\r\n        </Typography>\r\n        <DivGrid>\r\n          {cartItems.map((item) => (\r\n            <CartItem\r\n              item={item}\r\n              key={item.name}\r\n              handleUpdateCartQty={handleUpdateCartQty}\r\n              handleRemoveFromCart={handleRemoveFromCart}\r\n            />\r\n          ))}\r\n        </DivGrid>\r\n        <DivFlex>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Subtotal: {cart.subtotal.formatted_with_symbol}\r\n          </Typography>\r\n          <DivFlex divWidth>\r\n            <StyledButton\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              size=\"medium\"\r\n              onClick={() => handleEmptyCart()}\r\n            >\r\n              Empty cart\r\n            </StyledButton>\r\n            <StyledButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              component={Link}\r\n              to=\"/checkout\"\r\n            >\r\n              Checkout\r\n            </StyledButton>\r\n          </DivFlex>\r\n        </DivFlex>\r\n      </Container>\r\n    );\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h5\" align=\"center\">\r\n        You have no items in your shopping cart, start adding some!\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import styled from \"styled-components\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport { Button, Card, CardActionArea } from \"@material-ui/core\";\r\n\r\nexport const StyledCard = styled(Card)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const StyledCardActionArea = styled(CardActionArea)`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const StyledButton = withStyles({ root: { margin: \"0 auto\" } })(Button);\r\n","import {\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {\r\n  StyledCard,\r\n  StyledCardActionArea,\r\n  StyledButton,\r\n} from \"./ProductStyles\";\r\n\r\nconst Product = ({ product, handleAddToCart }) => {\r\n  return (\r\n    <>\r\n      <StyledCard>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={product.name}\r\n          height=\"200\"\r\n          image={product.media.source}\r\n          title={product.name}\r\n        />\r\n        <StyledCardActionArea>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n              {product.name}\r\n            </Typography>\r\n            <Typography\r\n              dangerouslySetInnerHTML={{ __html: product.description }}\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            />\r\n            <Typography variant=\"h6\">\r\n              {product.price.formatted_with_symbol}\r\n            </Typography>\r\n          </CardContent>\r\n        </StyledCardActionArea>\r\n        <CardActions>\r\n          <StyledButton\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() => handleAddToCart(product.id)}\r\n          >\r\n            Add to cart\r\n          </StyledButton>\r\n        </CardActions>\r\n      </StyledCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nimport Product from \"./Product/Product\";\r\nimport { StyledFlexContainer, StyledGridContainer } from \"./ProductsStyles\";\r\n\r\nconst Products = ({ products, handleAddToCart }) => {\r\n  if (!products.length)\r\n    return (\r\n      <StyledFlexContainer>\r\n        <CircularProgress size={80} />\r\n      </StyledFlexContainer>\r\n    );\r\n\r\n  return (\r\n    <StyledGridContainer>\r\n      {products.map((product) => (\r\n        <Product\r\n          key={product.id}\r\n          product={product}\r\n          handleAddToCart={handleAddToCart}\r\n        />\r\n      ))}\r\n    </StyledGridContainer>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import { Container, Paper, Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledContainer = withStyles({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column-reverse\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  \"@media (min-width: 750px)\": {\r\n    root: {\r\n      flexDirection: \"row\",\r\n      justifyContent: \"space-evenly\",\r\n      alignItems: \"start\",\r\n    },\r\n  },\r\n})(Container);\r\n\r\nexport const StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 20px;\r\n\r\n  @media (min-width: 750px) {\r\n    align-items: start;\r\n  }\r\n\r\n  @media (min-width: 1100px) {\r\n    gap: 15px;\r\n  }\r\n`;\r\n\r\nexport const StyledPaper = withStyles({\r\n  root: {\r\n    width: \"80%\",\r\n\r\n    \"&:first-child\": {\r\n      margin: \"20px 0\",\r\n    },\r\n  },\r\n\r\n  \"@media (min-width: 750px)\": {\r\n    root: {\r\n      marginTop: 20,\r\n      width: \"45%\",\r\n    },\r\n  },\r\n\r\n  \"@media (min-width: 1000px)\": {\r\n    root: {\r\n      width: \"40%\",\r\n    },\r\n  },\r\n  \"@media (min-width: 1200px)\": {\r\n    root: {\r\n      width: \"35%\",\r\n    },\r\n  },\r\n})(Paper);\r\n\r\nexport const StyledItemMenu = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n\r\n  @media (min-width: 500px) {\r\n    flex-direction: row;\r\n  }\r\n  @media (min-width: 750px) {\r\n    flex-direction: column;\r\n  }\r\n  @media (min-width: 900px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledTypography = styled(Typography)`\r\n  @media (min-width: 500px) {\r\n    margin-left: auto !important;\r\n  }\r\n  @media (min-width: 750px) {\r\n    margin-left: 0 !important;\r\n  }\r\n  @media (min-width: 900px) {\r\n    margin-left: auto !important;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  margin-right: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { Button, Input, Typography } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { StyledForm, StyledPaper } from \"../CheckoutStyles\";\r\n\r\n// ========== FORM VALIDATION ==========\r\nconst thisYear = new Date().getFullYear();\r\n\r\nconst schema = yup.object().shape({\r\n  firstName: yup.string().required(),\r\n  lastName: yup.string().required(),\r\n  email: yup.string().email().required(),\r\n\r\n  fullName: yup.string().required(),\r\n  streetAddress: yup.string().required(),\r\n  city: yup.string().required(),\r\n  zipCode: yup\r\n    .string()\r\n    .required()\r\n    .matches(/(\\d\\d-\\d\\d\\d)/)\r\n    .max(6),\r\n  country: yup.string().required(),\r\n\r\n  creditCardNumber: yup\r\n    .string()\r\n    .required()\r\n    .matches(/^(([\\d]{16})|(([\\d]{4})+\\s?){4})$/)\r\n    .max(19),\r\n  expiryMonth: yup.number().required().integer().min(1).max(12),\r\n  expiryYear: yup\r\n    .number()\r\n    .required()\r\n    .integer()\r\n    .min(thisYear)\r\n    .max(thisYear + 2),\r\n  ccv: yup\r\n    .string()\r\n    .required()\r\n    .matches(/(\\d\\d\\d)/)\r\n    .max(3),\r\n});\r\n\r\n// ========== INPUTS ARRAYS ==========\r\nconst customerInformationInputs = [\r\n  { name: \"firstName\", placeholder: \"First Name\" },\r\n  { name: \"lastName\", placeholder: \"Last Name\" },\r\n  { name: \"email\", placeholder: \"Email\" },\r\n];\r\n\r\nconst shippingDetailsInputs = [\r\n  { name: \"fullName\", placeholder: \"Full Name\" },\r\n  { name: \"streetAddress\", placeholder: \"Street Address\" },\r\n  { name: \"city\", placeholder: \"City\" },\r\n  { name: \"zipCode\", placeholder: \"ZIP Code\" },\r\n  { name: \"country\", placeholder: \"Country\" },\r\n];\r\n\r\nconst paymentInformationInputs = [\r\n  { name: \"creditCardNumber\", placeholder: \"Credit Card Number\" },\r\n  { name: \"expiryMonth\", placeholder: \"Expiry Month\" },\r\n  { name: \"expiryYear\", placeholder: \"Expiry Year\" },\r\n  { name: \"ccv\", placeholder: \"CCV\" },\r\n];\r\n\r\nconst LeftItem = ({ checkoutToken }) => {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ resolver: yupResolver(schema) });\r\n\r\n  const history = useHistory();\r\n  const onSubmit = () => {\r\n    let path = `/checkout/token=${checkoutToken.id}`;\r\n    history.push(path);\r\n  };\r\n\r\n  const createInputs = (arrayName) =>\r\n    arrayName.map((input) => {\r\n      return (\r\n        <div key={input.name}>\r\n          <Controller\r\n            name={input.name}\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field }) => (\r\n              <Input placeholder={input.placeholder} {...field} />\r\n            )}\r\n          />\r\n          {errors[input.name] && (\r\n            <Typography variant=\"body2\" color=\"secondary\">\r\n              Require {input.placeholder}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <StyledPaper elevation={3}>\r\n      <StyledForm onSubmit={handleSubmit(onSubmit)}>\r\n        <Typography variant=\"h6\" color=\"primary\">\r\n          Customer information\r\n        </Typography>\r\n        {createInputs(customerInformationInputs)}\r\n\r\n        <Typography variant=\"h6\" color=\"primary\">\r\n          Shipping details\r\n        </Typography>\r\n        {createInputs(shippingDetailsInputs)}\r\n\r\n        <Typography variant=\"h6\" color=\"primary\">\r\n          Payment information\r\n        </Typography>\r\n        {createInputs(paymentInformationInputs)}\r\n\r\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n          Confirm Order\r\n        </Button>\r\n      </StyledForm>\r\n    </StyledPaper>\r\n  );\r\n};\r\n\r\nexport default LeftItem;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport { StyledPaper } from \"../CheckoutStyles\";\r\nimport { StyledItemMenu, StyledTypography, StyledImg } from \"../CheckoutStyles\";\r\n\r\nconst RightItem = ({ cart }) => {\r\n  return (\r\n    <StyledPaper elevation={3}>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography color=\"primary\" variant=\"h5\" gutterBottom>\r\n            Order Summary\r\n          </Typography>\r\n          {cart.line_items.map((item) => (\r\n            <StyledItemMenu key={item.id}>\r\n              <StyledImg src={item.media.source} alt={item.name} />\r\n              <Typography variant=\"subtitle1\">\r\n                {item.quantity} x {item.name}\r\n              </Typography>\r\n              <StyledTypography variant=\"subtitle1\">\r\n                {item.line_total.formatted_with_symbol}\r\n              </StyledTypography>\r\n            </StyledItemMenu>\r\n          ))}\r\n          <Typography variant=\"h6\">\r\n            Subtotal: {cart.subtotal.formatted_with_symbol}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </StyledPaper>\r\n  );\r\n};\r\n\r\nexport default RightItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport { commerce } from \"lib/commerce\";\r\n\r\nimport LeftItem from \"./CheckoutItems/LeftItem\";\r\nimport RightItem from \"./CheckoutItems/RightItem\";\r\n\r\nimport { StyledContainer } from \"./CheckoutStyles\";\r\n\r\nconst Checkout = ({ cart }) => {\r\n  const [checkoutToken, setCheckoutToken] = useState({});\r\n\r\n  const generateCheckoutToken = () => {\r\n    if (cart.line_items)\r\n      if (cart.line_items.length) {\r\n        commerce.checkout\r\n          .generateToken(cart.id, { type: \"cart\" })\r\n          .then((token) => {\r\n            setCheckoutToken(token);\r\n          })\r\n          .catch((error) => {\r\n            console.log(\"There was an error in generating a token\", error);\r\n          });\r\n      }\r\n  };\r\n\r\n  useEffect(() => {\r\n    generateCheckoutToken();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (!cart.line_items) {\r\n    if (\r\n      Object.keys(checkoutToken).length === 0 &&\r\n      checkoutToken.constructor === Object\r\n    )\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/\",\r\n          }}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <LeftItem checkoutToken={checkoutToken} />\r\n      <RightItem cart={cart} />\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import styled from \"styled-components\";\r\nimport { Button, Typography, withStyles } from \"@material-ui/core\";\r\n\r\nexport const ConfirmationContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nexport const StyledTypography = withStyles({\r\n  root: {\r\n    color: \"#18A558\",\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  \"@media (max-width: 599px)\": {\r\n    root: {\r\n      fontSize: \"50px\",\r\n      width: \"80%\",\r\n    },\r\n  },\r\n})(Typography);\r\n\r\nexport const StyledButton = withStyles({\r\n  root: {\r\n    backgroundColor: \"#18A558\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#4caf50\",\r\n    },\r\n  },\r\n})(Button);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  ConfirmationContainer,\r\n  StyledTypography,\r\n  StyledButton,\r\n} from \"./ConfirmationStyles\";\r\n\r\nconst Confirmation = ({ handleEmptyCart }) => {\r\n  const history = useHistory();\r\n  const confirm = () => {\r\n    handleEmptyCart();\r\n    setTimeout(() => {\r\n      history.push(\"/\");\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <ConfirmationContainer>\r\n      <StyledTypography variant=\"h2\" gutterBottom>\r\n        Payment accepted\r\n      </StyledTypography>\r\n\r\n      <StyledButton variant=\"contained\" onClick={confirm}>\r\n        Back to shop\r\n      </StyledButton>\r\n    </ConfirmationContainer>\r\n  );\r\n};\r\n\r\nexport default Confirmation;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { commerce } from \"./lib/commerce\";\r\nimport { Navbar, Cart, Products, Checkout, Confirmation } from \"./components\";\r\n\r\nconst App = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // ======== fetch data ========\r\n  const fetchProducts = async () => {\r\n    const { data } = await commerce.products.list();\r\n    setProducts(data);\r\n  };\r\n\r\n  const fetchCart = async () => {\r\n    setCart(await commerce.cart.retrieve());\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    fetchCart();\r\n  }, []);\r\n\r\n  // ======== handlers ========\r\n  const handleAddToCart = (productId) => {\r\n    commerce.cart\r\n      .add(productId, 1)\r\n      .then((item) => {\r\n        setCart(item.cart);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error adding the item to the cart\", error);\r\n      });\r\n  };\r\n\r\n  const handleUpdateCartQty = (lineItemId, quantity) => {\r\n    commerce.cart\r\n      .update(lineItemId, { quantity })\r\n      .then((resp) => {\r\n        setCart(resp.cart);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"There was an error updating the cart items\", error);\r\n      });\r\n  };\r\n\r\n  const handleRemoveFromCart = (lineItemId) => {\r\n    commerce.cart\r\n      .remove(lineItemId)\r\n      .then((resp) => {\r\n        setCart(resp.cart);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\r\n          \"There was an error removing the item from the cart\",\r\n          error\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleEmptyCart = () => {\r\n    commerce.cart\r\n      .empty()\r\n      .then((resp) => {\r\n        setCart(resp.cart);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error emptying the cart\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Router basename=\"/E-commerce\">\r\n      <Navbar cartQnt={cart.total_items} />\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Products products={products} handleAddToCart={handleAddToCart} />\r\n        </Route>\r\n        <Route path=\"/cart\">\r\n          <Cart\r\n            cart={cart}\r\n            handleUpdateCartQty={handleUpdateCartQty}\r\n            handleRemoveFromCart={handleRemoveFromCart}\r\n            handleEmptyCart={handleEmptyCart}\r\n          />\r\n        </Route>\r\n        <Route path=\"/checkout\" exact>\r\n          <Checkout cart={cart} />\r\n        </Route>\r\n        <Route path=\"/checkout\">\r\n          <Checkout cart={cart} />\r\n          <Confirmation handleEmptyCart={handleEmptyCart} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}